{"version":3,"sources":["components/common/FormControls/FormControls.module.css","components/utils/validators/validators.js","components/common/FormControls/FormControls.jsx","components/Login/LoginForm.jsx","components/Login/login.jsx"],"names":["module","exports","required","value","maxLength","max","values","length","minLength","min","TextArea","input","meta","touched","error","props","noValidate","className","styles","formControl","Input","createField","component","validators","name","placeholder","text","validate","minLength4","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","formSomeError","type","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,cAAgB,sC,iCCDtH,sGAAO,IAAMC,EAAW,SAACC,GACvB,IAAIA,EAGJ,MAAO,YAGIC,EAAY,SAACC,GAAD,OAAS,SAACC,GACjC,GAAIA,GAAUA,EAAOC,OAASF,EAC5B,MAAM,kBAAN,OAAyBA,KAIhBG,EAAY,SAACC,GAAD,OAAS,SAACH,GACjC,GAAIA,GAAUA,EAAOC,OAASE,EAC5B,MAAM,kBAAN,OAAyBA,M,8LCXhBC,EAAW,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAgD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAYC,EAAY,gCACnEC,EAAaH,GAAWC,EAC9B,OACE,yBACEG,UAAWC,IAAOC,YAAc,KAAOH,EAAaE,IAAOJ,MAAQ,KAEnE,6BACE,8CAAcH,EAAWI,KAE3B,6BAAMC,GAAc,8BAAOF,MAKpBM,EAAQ,SAAC,GAAmD,IAAjDT,EAAgD,EAAhDA,MAAgD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAYC,EAAY,gCAChEC,EAAaH,GAAWC,EAC9B,OACE,yBACEG,UAAWC,IAAOC,YAAc,KAAOH,EAAaE,IAAOJ,MAAQ,KAEnE,6BACE,2CAAWH,EAAWI,KAExB,6BAAMC,GAAc,8BAAOF,MAKpBO,EAAc,SACzBC,EACAC,EACAC,EACAC,GAJyB,IAKzBV,EALyB,uDAKjB,GACRW,EANyB,uDAMlB,GANkB,OAQzB,6BACE,kBAAC,IAAD,eACEJ,UAAWA,EACXK,SAAUJ,EACVC,KAAMA,EACNC,YAAaA,GACTV,IAELW,K,yGC1CCE,EAAapB,YAAU,GAgCdqB,EAJQC,YAAU,CAC/BC,KAAM,SADeD,EA1BL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAclB,EAAY,EAAZA,MACjC,OACE,0BAAMmB,SAAUD,GACblB,GAAS,yBAAKG,UAAWC,IAAOgB,eAAgBpB,GAChDO,YAAYD,IAAO,CAAClB,IAAU0B,GAAa,QAAS,QAAS,CAC5DO,KAAM,SAEPd,YAAYD,IAAO,CAAClB,IAAU0B,GAAa,WAAY,WAAY,CAClEO,KAAM,aAEPd,YACCD,IACA,KACA,aACA,KACA,CAAEe,KAAM,YACR,cAGF,6BACE,+C,uBCCOC,uBANS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,KAAKD,UAIiB,CAAEE,WAA3BJ,EAvBD,SAACrB,GAKb,OAAIA,EAAMuB,OACD,kBAAC,IAAD,CAAUG,GAAI,YAIrB,6BACE,qCACA,kBAAC,EAAD,CAAgBR,SAXH,SAACS,GAChB3B,EAAMyB,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/6.0265d7d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__nsJxe\",\"error\":\"FormControls_error__1etId\",\"formSomeError\":\"FormControls_formSomeError__3FfET\"};","export const required = (value) => {\n  if (value) {\n    return undefined;\n  }\n  return \"Required\";\n};\n\nexport const maxLength = (max) => (values) => {\n  if (values && values.length > max) {\n    return `Max simbols is ${max}`;\n  }\n  return undefined;\n};\nexport const minLength = (min) => (values) => {\n  if (values && values.length < min) {\n    return `Min simbols is ${min}`;\n  }\n  return undefined;\n};\n","import React from \"react\";\nimport styles from \"./FormControls.module.css\";\nimport { Field } from \"redux-form\";\n\nexport const TextArea = ({ input, meta: { touched, error }, ...props }) => {\n  const noValidate = touched && error;\n  return (\n    <div\n      className={styles.formControl + \" \" + (noValidate ? styles.error : \"\")}\n    >\n      <div>\n        <textarea {...input} {...props}></textarea>\n      </div>\n      <div>{noValidate && <span>{error}</span>}</div>\n    </div>\n  );\n};\n\nexport const Input = ({ input, meta: { touched, error }, ...props }) => {\n  const noValidate = touched && error;\n  return (\n    <div\n      className={styles.formControl + \" \" + (noValidate ? styles.error : \"\")}\n    >\n      <div>\n        <input {...input} {...props} />\n      </div>\n      <div>{noValidate && <span>{error}</span>}</div>\n    </div>\n  );\n};\n\nexport const createField = (\n  component,\n  validators,\n  name,\n  placeholder,\n  props = {},\n  text = \"\"\n) => (\n  <div>\n    <Field\n      component={component}\n      validate={validators}\n      name={name}\n      placeholder={placeholder}\n      {...props}\n    />\n    {text}\n  </div>\n);\n","import React from \"react\";\n\nimport { reduxForm } from \"redux-form\";\nimport { createField, Input } from \"../common/FormControls/FormControls\";\nimport { minLength, required } from \"../utils/validators/validators\";\nimport styles from \"../common/FormControls/FormControls.module.css\";\nconst minLength4 = minLength(4);\n\nconst LoginForm = ({ handleSubmit, error }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      {error && <div className={styles.formSomeError}>{error}</div>}\n      {createField(Input, [required, minLength4], \"email\", \"Email\", {\n        type: \"text\",\n      })}\n      {createField(Input, [required, minLength4], \"password\", \"Password\", {\n        type: \"password\",\n      })}\n      {createField(\n        Input,\n        null,\n        \"rememberMe\",\n        null,\n        { type: \"checkbox\" },\n        \"rememberMe\"\n      )}\n\n      <div>\n        <button>Log in</button>\n      </div>\n    </form>\n  );\n};\n\nconst LoginReduxForm = reduxForm({\n  form: \"login\",\n})(LoginForm);\n\nexport default LoginReduxForm;\n","import React from \"react\";\nimport LoginReduxForm from \"./LoginForm\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/authReducer\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return <Redirect to={\"profile\"} />;\n  }\n\n  return (\n    <div>\n      <h1>LOGIN</h1>\n      <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport default connect(mapStateToProps, { login })(Login);\n"],"sourceRoot":""}